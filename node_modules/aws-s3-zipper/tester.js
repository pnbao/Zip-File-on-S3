/**
 * Created by danielhindi on 2/26/16.
 */

var S3Zipper = require ('./index.js');

var config ={
    accessKeyId: "AKIAIHTXZYPJDS6HPCZQ",
    secretAccessKey: "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",
    region: "us-west-2",
    bucket: 'imagelibserver'
};
var zipper = new S3Zipper(config);

zipper.filterOutFiles= function(file){
    if(file.Key.indexOf('.zip') < 0)
        return file;
};


zipper.zipToFile ({
        s3FolderName:"11111111111111"
        , startKey:''
        , zipFileName:'./tmp/aaa.zip'
        , recursive:true
    }
    ,function(err,result){
        if(err)
            console.error(err);
        else{
            var lastFile = result.zippedFiles[result.zippedFiles.length-1];
            if(lastFile)
                console.log('last key ', lastFile.Key); // next time start from here
    }
});

return;

zipper.zipToFileFragments ({
    s3FolderName:"11111111111111"
    , startKey:''
    , zipFileName:'./test.zip'
    , maxFileCount:5
    , maxFileSize:1024 * 1024
    , recursive:true
    },function(err,results){
        if(err)
            console.error(err);
        else{
            if(results.length > 0) {
                var result = results[results.length - 1];
                var lastFile = result.zippedFiles[result.zippedFiles.length - 1];
                if (lastFile)
                    console.log('last key ', lastFile.Key); // next time start from here
            }
        }
});


zipper.zipToS3File ({
        s3FolderName:"11111111111111"
        ,s3ZipFileName: 'test.zip'
        ,recursive:true
    }
    ,function(err,result){
       if(err)
            console.error(err);
        else{
           var lastFile = result.zippedFiles[result.zippedFiles.length-1];
           if(lastFile)
           console.log('last key ', lastFile.Key); // next time start from here
       }
});


zipper.zipToS3FileFragments("11111111111111",'', 'test.zip',5,1024*1024,function(err, results){
    if(err)
        console.error(err);
    else    if(results.length > 0) {
        var result = results[results.length - 1];
        var lastFile = result.zippedFiles[result.zippedFiles.length - 1];
        if (lastFile)
            console.log('last key ', lastFile.Key); // next time start from here
    }

});
